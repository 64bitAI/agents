#!/usr/bin/env python3
"""
Compare multiple agents' analysis on the same query
Usage: /compare agent1 agent2 "query"
       /compare all "query"

---
description: Compare multiple agents' perspectives on the same query
---
"""

import sys
import json
from datetime import datetime
from pathlib import Path

def main():
    if len(sys.argv) < 3:
        print("Usage: /compare agent1 agent2 \"query\"")
        print("       /compare all \"query\"")
        sys.exit(1)
    
    # Parse arguments
    if sys.argv[1] == "all":
        agents = ["risk", "technicals", "fundamentals", "quant", "sentiment"]
        query = sys.argv[2]
    else:
        agents = sys.argv[1:-1]  # All args except the last (query)
        query = sys.argv[-1]
    
    print(f"🔍 Comparing Agent Perspectives")
    print(f"Query: {query}")
    print(f"Agents: {', '.join(agents)}")
    print(f"Time: {datetime.now().strftime('%Y-%m-%d %H:%M ET')}")
    print("=" * 60)
    
    results = {}
    
    for i, agent in enumerate(agents, 1):
        print(f"\n📊 Agent {i}/{len(agents)}: {agent.upper()} Analysis")
        print("-" * 40)
        
        agent_context = f"""
Query: {query}

Context for {agent} agent:
- Provide your specialized {agent} analysis of the above query
- Reference current portfolio state (@.claude/context/portfolio_state.md)
- Consider current market conditions (@.claude/context/market_conditions.md)
- Check active alerts (@.claude/alerts/active.md)
- Include your specialized perspective and expertise
- Note any risks or opportunities you identify
- Use your structured markdown report format
- This is part of a multi-agent comparison, so be concise but comprehensive
        """
        
        print(f"Use agent {agent} with the following context:")
        print(agent_context)
        print("")
        print("---")
        print("")
        
    print(f"\n🎯 COMPARISON SYNTHESIS")
    print("=" * 40)
    print("")
    print("After reviewing all agent responses above, please:")
    print("")
    print("1. **Identify Common Themes**: What do most agents agree on?")
    print("2. **Highlight Disagreements**: Where do agents have different views?")
    print("3. **Synthesize Insights**: What's the combined perspective?") 
    print("4. **Recommended Actions**: What should we do based on all inputs?")
    print("")
    print(f"Query analyzed: {query}")
    print(f"Agents consulted: {', '.join(agents)}")
    print("")
    print("💡 Next steps:")
    print("  - Use /portfolio to discuss synthesis with Portfolio Manager")
    print("  - Consider /chain for deeper analysis between specific agents")
    print("  - Use /alerts to monitor any new developments")

if __name__ == "__main__":
    main()